name: Build and Deploy to GKE
on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}  
  GKE_ZONE: ${{ secrets.GKE_ZONE }} 
  DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}
  IMAGE: ${{ secrets.IMAGE }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: QA

    steps:
    - name: Checkout
      uses: actions/checkout@v2
        
    # Setup gcloud CLI
    - name: configure gcloud
      uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
        
    - name: configure Docker
      run: |-
        gcloud --quiet auth configure-docker
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
        
    # Build the Docker image
    - name: Build
      run: |-
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        docker build \
          --tag "us.gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF##*/}-$git_hash" .
          
    # Push the Docker image to Google Container Registry
    - name: Docker Push
      run: |-
        docker push "us.gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF##*/}-$git_hash"
    
    # Update the version so that the latest image is deployed
    - name: Update Version
      run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          version=$(cat ./charts/helm-example/values.yaml | grep version: | awk '{print $2}')
          sed -i "s/$version/${GITHUB_REF##*/}-$git_hash/" ./charts/helm-example/values.yaml
          
